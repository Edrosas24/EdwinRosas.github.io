Skip to content
Search or jump to…
Pulls
Issues
Marketplace
Explore
 
@Edrosas24 
Edrosas24
/
SQLProj
Public
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Settings
SQLProj/SQLProjQueryV1.sql
@Edrosas24
Edrosas24 Add files via upload
Latest commit b89a367 on Mar 24
 History
 1 contributor
249 lines (188 sloc)  7.57 KB
   
Select Top 100 *
From SQLProj..CovidDeaths
Order By location, date

Select Top 100 *
From SQLProj..CovidVaccinations
Order By 3, 4

Select location, date, total_cases, new_cases, new_cases, population
From SQLProj..CovidDeaths
Order By location , date











--MEXICO
--Total Cases vs Total Deaths per Country 
Select location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DeathRate, 
Max((total_deaths/total_cases)*100) over () AS MaxDeathRate
From SQLProj..CovidDeaths
Where location = 'Mexico' 
Order By location, date
--Total Cases vs Population 
Select location, date,population,  total_cases, (total_cases/population)*100 AS CaseRate,
Max((total_cases/population)*100) over () As MaxCaseRate
From SQLProj..CovidDeaths
Where location = 'Mexico' 
Order By location, date

--USA
--Total Cases vs Total Deaths per Country 
Select location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DeathRate, 
Max((total_deaths/total_cases)*100) over () AS MaxDeathRate
From SQLProj..CovidDeaths
Where location like '%states%' 
Order By location, date
--Total Cases vs Population 
Select location, date,population,  total_cases, (total_cases/population)*100 AS CaseRate,
Max((total_cases/population)*100) over () As MaxCaseRate
From SQLProj..CovidDeaths
Where location like '%states%'
Order By location, date





--Total Cases vs Total Deaths per Country 
Select location, date, total_cases, total_cases, (total_deaths/total_cases)*100 AS DeathPercentage 
From SQLProj..CovidDeaths
Order By location , date


--CTE For Mexico vs US 
WITH CTE_CovidDeaths AS 
(Select location, date, total_cases, total_deaths, population,
(total_deaths/total_cases)*100 AS DeathRate,
(total_cases/population)*100 AS CaseRate
From SQLProj..CovidDeaths
Where location IN ('United States', 'Mexico')
)

Select location, population, Max(CaseRate) as MaxCaseRate, Max(DeathRate) as MaxDeathRate
From CTE_CovidDeaths
Group By location, population


--Countries with the highest Infection Rate Compared to Population 
Select location,population,  
	Max(total_cases) as MaxInfectionCount,
	Max((total_cases/population)*100) AS MaxCaseRate
From SQLProj..CovidDeaths
Group By location, population
Order By MaxCaseRate Desc


--Countries with the highest Death count per country 
Select location,population,  
	Max(total_deaths) as MaxDeathCount,
	Max((total_deaths/total_cases)*100) AS MaxDeathRate
From SQLProj..CovidDeaths
Where continent is not Null 
Group By location, population
Order By MaxDeathRate Desc




--Continents with the highest Death count per population 
Select location, 
	Max(total_deaths) as DeathCount
From SQLProj..CovidDeaths
Where continent is Null AND location not like '%income%' and location not in ('International', 'World','European Union')
Group By location
Order By DeathCount Desc;


--CTE of the above Query 
With CTE_CovidDeaths AS (
Select  location,continent,
	Max(total_deaths) as DeathCount
From SQLProj..CovidDeaths
where continent is not NULL --gets ride of the location conts.
group by location, continent
)

Select continent, sum(DeathCount) as TotalDeathCount
From CTE_CovidDeaths
group by continent
Order by TotalDeathCount Desc ;



-- Global Numbers
---- Tried to go directy to World Data from location, but Did not seem right 
----Global CTE 
----CTE of the above Query 
--With CTE_CovidDeaths AS (
--Select  date, new_cases, new_deaths, 
--	(new_deaths/Nullif(new_cases,0))*100 AS GlobalDeathPercentage
--From SQLProj..CovidDeaths
--Where location = 'World'
--)


--Daily Global Numbers 
Select date, SUM(new_cases) AS TotalCases, SUM(new_deaths) as TotalDeaths, 
	(SUM(new_deaths) / SUM(new_cases))*100 as GlobalDeathPercentage
From SQLProj..CovidDeaths
Where continent is not Null 
Group by date
Order by date 

--Absolute Global Numbers 
Select SUM(new_cases) AS TotalCases, SUM(new_deaths) as TotalDeaths, 
	(SUM(new_deaths) / SUM(new_cases))*100 as GlobalDeathPercentage
From SQLProj..CovidDeaths
Where continent is not Null 


--------------------------------------------------
--Working with the CovidVaccinations Table

--Looking at total Population vs Vacc
Select death.continent, death.location, death.date, death.population, vacc.new_vaccinations,
Sum(Convert(bigint,vacc.new_vaccinations))  over (Partition by death.location) AS TotalVaccinations,
Sum(vacc.new_vaccinations)  over 
(Partition by death.location Order By death.location, Convert(date,death.date)) AS RollingPeopleVaccinated 
From SQLProj..CovidDeaths as death
Join SQLProj..CovidVaccinations as vacc
	ON death.location = vacc.location
	and death.date = vacc.date
Where death.continent is not NULL
Order by death.location, death.date


-- Want to Query off the Table above

--CTE 
With CTE_PopVac as (
Select death.continent, death.location, death.date, death.population, vacc.new_vaccinations,
Sum(Convert(bigint,vacc.new_vaccinations))  over (Partition by death.location) AS TotalVaccinations,
Sum(vacc.new_vaccinations)  over 
(Partition by death.location Order By death.location, Convert(date,death.date)) AS RollingPeopleVaccinated 
From SQLProj..CovidDeaths as death
Join SQLProj..CovidVaccinations as vacc
	ON death.location = vacc.location
	and death.date = vacc.date
Where death.continent is not NULL
)




-- WE will be Using a Temp Table since we will be Querying off the table Multiple times 

--TEMP TABLE
--CREATE TEMP Table
Drop Table IF Exists #temp_PopVac
Create Table #temp_PopVac ( 
continent nvarchar(225),
location nvarchar(255),
date date,
population float,
new_vaccinations bigint,
TotalVaccinations bigint,
RollingPeopleVaccinated bigint
)

--POPULATE TEMP Table 
Insert Into #temp_PopVac 
Select death.continent, death.location, death.date, death.population, vacc.new_vaccinations,
Sum(Convert(bigint,vacc.new_vaccinations))  over (Partition by death.location) AS TotalVaccinations,
Sum(vacc.new_vaccinations)  over 
(Partition by death.location Order By death.location, Convert(date,death.date)) AS RollingPeopleVaccinated 
From SQLProj..CovidDeaths as death
Join SQLProj..CovidVaccinations as vacc
	ON death.location = vacc.location
	and death.date = vacc.date
Where death.continent is not NULL
Order By death.location, death.date

--Daily vaccicnation rate per country 
Select *, (RollingPeopleVaccinated/population)*100 as DailyVaccRate
From #temp_PopVac

--Vaccinatioin Rate per Country 
Select continent, location,  MAX(RollingPeopleVaccinated/population)*100 as NationVaccRate
From #temp_PopVac
Where continent is NOT NuLL 
Group by continent, location
Order By location

--Vaccination Per continent
Select continent,  MAX(RollingPeopleVaccinated/population)*100 as NationVaccRate
From #temp_PopVac
Where continent is NOT NuLL 
Group by continent
Order By continent


--Global Vaccination Rate 
Select MAX(RollingPeopleVaccinated/population)*100 as NationVaccRate
From #temp_PopVac



--Create view to stire Data for later Visualization 
Drop View if Exists dbo.View_PopVac
GO -- batch separater 

Create View View_PopVac as 
Select death.continent, death.location, death.date, death.population, vacc.new_vaccinations,
Sum(Convert(bigint,vacc.new_vaccinations))  over (Partition by death.location) AS TotalVaccinations,
Sum(vacc.new_vaccinations)  over 
(Partition by death.location Order By death.location, Convert(date,death.date)) AS RollingPeopleVaccinated 
From SQLProj..CovidDeaths as death
Join SQLProj..CovidVaccinations as vacc
	ON death.location = vacc.location
	and death.date = vacc.date
Where death.continent is not NULL

© 2022 GitHub, Inc.
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
